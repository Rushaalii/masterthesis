library(raster)
library(dplyr)
library(purrr)
library(ggplot2)
library(gridExtra)
library(readr)
library(data.table)
library(Synth)
library(tidyr)
library(knitr)
library(kableExtra)
library(xtable)
library(Synth)
library(openxlsx)


# Remove all objects from the workspace
rm(list=ls())
setwd("/Users/tilpommer/Documents/BSE/Term 3/Master project/Results")

synth_data <- read_csv("/Users/tilpommer/Documents/BSE/Term 3/Master project/Results/100SyntheticControl_usefor_below5yo.csv.gz")

#Restrict until 2019
synth_data$YEAR <- as.numeric(as.character(synth_data$YEAR))

synth_data <- synth_data[synth_data$YEAR < 2020,]

# Create unique/state-independent PUMA
synth_data$STATEFIP <- sprintf("%02d", synth_data$STATEFIP)
synth_data$PUMA <- sprintf("%05d", synth_data$PUMA)
synth_data$UPUMA <- paste0(synth_data$STATEFIP,"_", synth_data$PUMA)


#Add new variables 
synth_data$laborforce <- ifelse(synth_data$LABFORCE == 2, 1, ifelse(synth_data$LABFORCE == 1, 0, NA))
synth_data$employment <- ifelse(synth_data$EMPSTAT == 1, 1, ifelse(synth_data$EMPSTAT %in% c(2, 3), 0, NA))
synth_data$fulltime <- ifelse(synth_data$UHRSWORK >= 30, 1, 0)
synth_data$no.children <- ifelse(synth_data$NCHILD >= 4, 4, synth_data$NCHILD)
synth_data$race <- ifelse(synth_data$RACE >= 3, 3, synth_data$RACE)
synth_data$married <- ifelse(synth_data$MARST <= 2, 1, 0)
synth_data$white <- ifelse(synth_data$RACE == 1, 1, 0)
synth_data$black <- ifelse(synth_data$RACE == 2, 1, 0)
synth_data$INCWAGE[synth_data$INCWAGE == 999999] <- NA

synth_data$hsdropout <- ifelse(synth_data$EDUCD <= 061, 1, 0)
synth_data$hsgraduate <- ifelse(synth_data$EDUCD >= 062 & synth_data$EDUCD < 065, 1, 0)
synth_data$somecollege <- ifelse(synth_data$EDUCD >= 065 & synth_data$EDUCD <= 100, 1, 0)
synth_data$min_bachelor <- ifelse(synth_data$EDUCD > 100, 1, 0)

# Adding the poverty variable
synth_data$poverty <- ifelse(synth_data$POVERTY == 1, 1, 0)



################################################################################
# Creating Donor Pool
################################################################################

# Data Loading and Cleaning
geographicdata2005 <- read.xlsx("2005-2011 PUMAS Citites.xlsx", sheet = 1)
geographicdata2005$UPUMA <- paste0(geographicdata2005$FIPS.State.Code, "_", geographicdata2005$PUMA)

geographicdata2012 <- read.xlsx("2012-2021 PUMAS Cities.xlsx", sheet = 1)
geographicdata2012$Place.Name <- ifelse(geographicdata2012$Place.Name == "Nashville-Davidson metropolitan government (balance)", "Nashville-Davidson (balance)", geographicdata2012$Place.Name)
geographicdata2012$X13 <- NULL
geographicdata2012$UPUMA <- paste0(geographicdata2012$FIPS.State.Code, "_", geographicdata2012$PUMA)

# Keeping only cities with >500'000 population and >75% PUMA zone coverage
cities2005donorpool <- subset(geographicdata2005, geographicdata2005$Place.2000.Population > 500000 & geographicdata2005$Percent.PUMA.Population > 0.75)
cities2012donorpool <- subset(geographicdata2012, geographicdata2012$Place.2010.Population > 500000 & geographicdata2012$Percent.PUMA.Population > 0.75)

# Keeping only cities in 2012 that had >500'000 population in year 2000 (questionable?) 
metropolitan_cities <- unique(cities2005donorpool$Place.Name)
cities2012donorpool <- subset(cities2012donorpool, Place.Name %in% metropolitan_cities)

# Removing cities with major pre-K policies
major_preK <- c("Washington city", "Baltimore city", "Jacksonville city", "Oklahoma City city", "Milwaukee city", "Fort Worth city", "Austin city", "Boston city")
cities2005donorpool <- subset(cities2005donorpool, !(Place.Name %in% major_preK))
cities2012donorpool <- subset(cities2012donorpool, !(Place.Name %in% major_preK))

# Extract PUMA codes
upumas2005donorpool <- cities2005donorpool$UPUMA
upumas2012donorpool <- cities2012donorpool$UPUMA
donorpool <- synth_data[(synth_data$UPUMA %in% upumas2005donorpool & synth_data$YEAR < 2012) | (synth_data$UPUMA %in% upumas2012donorpool & synth_data$YEAR >= 2012),]

# Donorpool
# donorpool$UPUMA <- as.character(donorpool$UPUMA)
# cities2005donorpool$UPUMA <- as.character(cities2005donorpool$UPUMA)

#Add Cities 
donorpool <- bind_rows(
  donorpool %>% 
    filter(YEAR <= 2011) %>%
    left_join(dplyr::select(cities2005donorpool, UPUMA, Place.Name), by = "UPUMA"),
  
  donorpool %>% 
    filter(YEAR >= 2012) %>%
    left_join(dplyr::select(cities2012donorpool, UPUMA, Place.Name), by = "UPUMA")
)

#Restrict to women with children below 5
donorpool[donorpool$NCHLT5 > 0,]


################################################################################
# Creating Variables for Synthetic Control
################################################################################

#Run regressions for donorpool with women <5
model1 <- lm(laborforce ~ NCHILD + NCHLT5 + AGE + married + white + black + hsdropout + hsgraduate + somecollege + min_bachelor, data = donorpool)
summary(model1)

#Create necessary variables: 
#Shares by cities 
synthcontrol_donorpool <- donorpool %>%
  group_by(Place.Name, YEAR) %>%
  summarise(
    married = weighted.mean(married, w = PERWT, na.rm = TRUE),
    white = weighted.mean(white, w = PERWT, na.rm = TRUE),
    black = weighted.mean(black, w = PERWT, na.rm = TRUE),
    share_hsdropout = weighted.mean(hsdropout, w = PERWT, na.rm = TRUE),
    share_hsgraduate = weighted.mean(hsgraduate, w = PERWT, na.rm = TRUE),
    share_somecollege = weighted.mean(somecollege, w = PERWT, na.rm = TRUE),
    share_min_bachelor = weighted.mean(min_bachelor, w = PERWT, na.rm = TRUE),
    age = weighted.mean(AGE, w = PERWT, na.rm = TRUE),
    part_rate = weighted.mean(laborforce, w = PERWT, na.rm = TRUE),
    emp_rate = weighted.mean(employment, w = PERWT, na.rm = TRUE),
    hours = weighted.mean(UHRSWORK[EMPSTAT == 1], w = PERWT[EMPSTAT == 1], na.rm = TRUE),
    fulltime = weighted.mean(fulltime, w = PERWT, na.rm = TRUE),
    income = weighted.mean(INCWAGE[INCWAGE > 0], w = PERWT[INCWAGE > 0], na.rm = TRUE),
    
    no_children = weighted.mean(no.children, w = PERWT, na.rm = TRUE),
    .groups = "drop"
  )

#Include lags

#2012
part_rate_2012 <- synthcontrol_donorpool %>%
  filter(YEAR == 2012) %>%
  dplyr::select(Place.Name, part_rate_2012 = part_rate)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(part_rate_2012, by = "Place.Name")

hours_2012 <- synthcontrol_donorpool %>%
  filter(YEAR == 2012) %>%
  dplyr::select(Place.Name, hours_2012 = hours)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(hours_2012, by = "Place.Name")

income_2012 <- synthcontrol_donorpool %>%
  filter(YEAR == 2012) %>%
  dplyr::select(Place.Name, income_2012 = income)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(income_2012, by = "Place.Name")


#2010
part_rate_2010 <- synthcontrol_donorpool %>%
  filter(YEAR == 2010) %>%
  dplyr::select(Place.Name, part_rate_2010 = part_rate)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(part_rate_2010, by = "Place.Name")

hours_2010 <- synthcontrol_donorpool %>%
  filter(YEAR == 2010) %>%
  dplyr::select(Place.Name, hours_2010 = hours)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(hours_2010, by = "Place.Name")

income_2010 <- synthcontrol_donorpool %>%
  filter(YEAR == 2010) %>%
  dplyr::select(Place.Name, income_2010 = income)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(income_2010, by = "Place.Name")


#2007 values and creating a new dataframe to merge back
part_rate_2007 <- synthcontrol_donorpool %>%
  filter(YEAR == 2007) %>%
  dplyr::select(Place.Name, part_rate_2007 = part_rate)  # Renaming the column for clarity

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(part_rate_2007, by = "Place.Name")

hours_2007 <- synthcontrol_donorpool %>%
  filter(YEAR == 2007) %>%
  dplyr::select(Place.Name, hours_2007 = hours)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(hours_2007, by = "Place.Name")

income_2007 <- synthcontrol_donorpool %>%
  filter(YEAR == 2007) %>%
  dplyr::select(Place.Name, income_2007 = income)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(income_2007, by = "Place.Name")

# Now, convert this factor to integers
synthcontrol_donorpool$city <- factor(synthcontrol_donorpool$Place.Name)
synthcontrol_donorpool$city <- as.numeric(synthcontrol_donorpool$city)

#Change format of data frame (necessary for command dataprep)
synthcontrol_donorpool <- as.data.frame(synthcontrol_donorpool)

# Correct way to specify controls
controls_identifier <- setdiff(unique(synthcontrol_donorpool$city), 13)

#New York City is no. 13
#Labor Force Participation
dataprep.out <-
  dataprep(
    foo = synthcontrol_donorpool,
    predictors = c("age","married","white","black","share_hsdropout","share_hsgraduate","share_somecollege","share_min_bachelor","no_children"), #"part_rate_2007","part_rate_2010","part_rate_2012"#add "hispanic"
    predictors.op = "mean",
    dependent = "part_rate",
    unit.variable = "city",
    time.variable = "YEAR",
    treatment.identifier = 13,
    controls.identifier = controls_identifier,
    time.predictors.prior = 2006:2013,
    time.optimize.ssr = 2006:2013,
    unit.names.variable = "Place.Name",  
    time.plot = 2006:2019
  )

synth.out <- synth(dataprep.out)
synth.tables <- synth.tab(dataprep.res = dataprep.out,
                          synth.res    = synth.out
)

gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
gaps[1:14, 1]
gaps

synth.tables$tab.w
synth.tables$tab.v
synth.tables$tab.pred


path.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Labor Force Participation",
          Xlab = "Year",
          Legend = c("NYC", "Synthetic NYC"),
          Main = "Mothers with children < 5y.o. (NYC vs Synthetic NYC)")

gaps.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Effect",
          Xlab = "Year",
          Main = " Gap between labor force participation in NYC and its synthetic version")


######################################################
###DiD to get estimates of synthetic Control Method###
######################################################

control = dataprep.out$Y0plot %*% synth.out$solution.w
control <- as.data.frame(control)
names(control)[names(control) == "w.weight"] <- "part_rate"
control$YEAR <- 2006:2019
control$eligible <- 0
control$post = ifelse(control$YEAR >= 2014, 1, 0)
control$treat_post <- control$eligible * control$post


# Subset the rows for "New York City"
nyc <- synthcontrol_donorpool[synthcontrol_donorpool$city == "13", c("YEAR", "part_rate")]
nyc$eligible <- 1
nyc$post = ifelse(nyc$YEAR >= 2014, 1, 0)
nyc$treat_post <- nyc$eligible * nyc$post

# Stack ny_rows below synth.control
did <- rbind(control, nyc)

# Fitting the Difference-in-Differences model
did_model <- lm(part_rate ~ eligible + post + treat_post, data = did)

# Summarizing the results
did_results <- tidy(did_model)
print(did_results)

# Extracting and interpreting coefficients
did_coef <- did_results %>% filter(term == "treat_post")
print(did_coef)

# Visualizing results 
plot_did <- ggplot(data = did, aes(x = YEAR, y = part_rate, color = as.factor(eligible))) +
  geom_line() +
  geom_vline(xintercept = 2013, linetype = "dashed", color = "blue") + # Line indicating treatment start
  annotate("text", x = 2011, y = max(did$part_rate), label = "Pre-treatment", hjust = 1, color = "blue") + # Pre-treatment label
  annotate("text", x = 2015, y = max(did$part_rate), label = "Post-treatment", hjust = 0, color = "blue") + # Post-treatment label
  labs(x = "Year", y = "Participation Rate", color = "NYC") +
  ggtitle("Labor Force Participation Mothers with <5yo: NYC vs Donorpool") +
  theme_minimal() +
  scale_x_continuous(breaks = seq(min(did$YEAR), max(did$YEAR), by = 1))

print(plot_did)


#############################
###Other Outcome Variables###
#############################

#Hours
dataprep.out <-
  dataprep(
    foo = synthcontrol_donorpool,
    predictors = c("age","married","white","black","share_hsdropout","share_hsgraduate","share_somecollege","share_min_bachelor","no_children","hours_2007","hours_2010","hours_2012"), #
    predictors.op = "mean",
    dependent = "hours",
    unit.variable = "city",
    time.variable = "YEAR",
    treatment.identifier = 13,
    controls.identifier = controls_identifier,
    time.predictors.prior = 2006:2013,
    time.optimize.ssr = 2006:2013,
    unit.names.variable = "Place.Name",  
    time.plot = 2006:2019
  )

synth.out <- synth(dataprep.out)
synth.tables <- synth.tab(dataprep.res = dataprep.out,
                          synth.res    = synth.out
)

gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
gaps[1:14, 1]
gaps

synth.tables$tab.w
synth.tables$tab.v
synth.tables$tab.pred


path.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Hours",
          Xlab = "Year",
          Legend = c("NYC", "Synthetic NYC"),
          Main = "Hours Mothers with children < 5y.o (NYC vs Synthetic NYC)")

gaps.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Effect",
          Xlab = "Year",
          Main = " Gap between Hours in NYC and its synthetic version")


#Income
dataprep.out <-
  dataprep(
    foo = synthcontrol_donorpool,
    predictors = c("age","married","white","black","share_hsdropout","share_hsgraduate","share_somecollege","share_min_bachelor","no_children"), #add "hispanic"
    predictors.op = "mean",
    dependent = "income",
    unit.variable = "city",
    time.variable = "YEAR",
    treatment.identifier = 13,
    controls.identifier = controls_identifier,
    time.predictors.prior = 2006:2013,
    time.optimize.ssr = 2006:2013,
    unit.names.variable = "Place.Name",  
    time.plot = 2006:2019
  )

synth.out <- synth(dataprep.out)
synth.tables <- synth.tab(dataprep.res = dataprep.out,
                          synth.res    = synth.out
)

gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
gaps[1:14, 1]
gaps

synth.tables$tab.w
synth.tables$tab.v
synth.tables$tab.pred


path.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Labor Force Participation",
          Xlab = "Year",
          Legend = c("NYC", "Synthetic NYC"),
          Main = "Income Mothers with children < 5y.o (NYC vs Synthetic NYC)")

gaps.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Effect",
          Xlab = "Year",
          Main = " Gap between Income in NYC and its synthetic version")

#Fulltimework
dataprep.out <-
  dataprep(
    foo = synthcontrol_donorpool,
    predictors = c("age","married","white","black","share_hsdropout","share_hsgraduate","share_somecollege","share_min_bachelor","no_children"), #add "hispanic"
    predictors.op = "mean",
    dependent = "fulltime",
    unit.variable = "city",
    time.variable = "YEAR",
    treatment.identifier = 13,
    controls.identifier = controls_identifier,
    time.predictors.prior = 2006:2013,
    time.optimize.ssr = 2006:2013,
    unit.names.variable = "Place.Name",  
    time.plot = 2006:2019
  )

synth.out <- synth(dataprep.out)
synth.tables <- synth.tab(dataprep.res = dataprep.out,
                          synth.res    = synth.out
)

gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
gaps[1:14, 1]
gaps

synth.tables$tab.w
synth.tables$tab.v
synth.tables$tab.pred


path.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Labor Force Participation",
          Xlab = "Year",
          Legend = c("NYC", "Synthetic NYC"),
          Main = "Fulltime Share Mothers with children < 5y.o (NYC vs Synthetic NYC)")

gaps.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Effect",
          Xlab = "Year",
          Main = " Gap between Fulltime Share in NYC and its synthetic version")


# ### Robustness Checks ### 
# #Backdating
# 
# 
# 
# #Leave-one-out
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# 
# #Placebo Tests
# #Random City
# dataprep.out <-
#   dataprep(foo = synthcontrol_donorpool,
#            predictors = c("age","married","white","hispanic","black","education","part_rate5_2007") ,
#            predictors.op = "mean" ,
#            time.predictors.prior = 2006:2013 ,
#            dependent = "part_rate5",
#            unit.variable = "city",
#            time.variable = "YEAR",
#            treatment.identifier = 5, # Change the ID to other unit that did NOT receive the treatment
#            controls.identifier = c(1:4,6:18,20:33),
#            time.optimize.ssr = 2006:2013,
#            time.plot = 2006:2018
#   )
# 
# synth.out <- synth(data.prep.obj = dataprep.out,
#                    method = "BFGS"
# )
# 
# path.plot(synth.res = synth.out,
#           dataprep.res = dataprep.out,
#           tr.intake = 1990,
#           Ylab = "Labor Force Participation",
#           Xlab = "Year",
#           Legend = c("Random", "Synthetic Random"),
#           Main = "Random City vs Synthetic random city")
# abline(v=2014,lty="dotted",lwd=2)
# 
# gaps.plot(synth.res = synth.out,
#           dataprep.res = dataprep.out,
#           tr.intake = 1990,
#           Ylab = "Effect",
#           Xlab = "Year",
#           Main = " Gap between labor force participation in random city and its synthetic version")
# 
# abline(v=2014,lty="dotted",lwd=2)
# 
# 
# ##All Placebos###
# 
# store <- matrix(NA,length(2006:2019),33)
# 
# colnames(store) <- unique(synthcontrol_donorpool$city)
# 
# # run placebo test
# for(iter in 2:33)
# {
#   dataprep.out <-
#     dataprep(foo = synthcontrol_donorpool,
#              predictors = c("age","married","white","hispanic","black","education","part_rate5_2007") ,
#              predictors.op = "mean" ,
#              time.predictors.prior = 2006:2013 ,
#              dependent = "part_rate5",
#              unit.variable = "city",
#              time.variable = "YEAR",
#              treatment.identifier = iter,
#              controls.identifier = c(2:33)[-iter+1],
#              time.optimize.ssr = 2006:2013,
#              time.plot = 2006:2019
#     )
#   # run synth
#   synth.out <- synth(
#     data.prep.obj = dataprep.out,
#     method = "BFGS"
#   )
#   
#   # store gaps
#   store[,iter-1] <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
# }
# 
# 
# # now do figure
# data <- store
# rownames(data) <- 2006:2019
# 
# # Set bounds in gaps data
# gap.start     <- 1
# gap.end       <- nrow(data)
# years         <- 2006:2019
# gap.end.pre  <- which(rownames(data)=="2012")




###########################
###Check Heterogeneities###
###########################

####Only not married###

# Calculate the share of married people and perform further analysis on unmarried individuals
synthcontrol_donorpool <- donorpool %>%
  group_by(Place.Name, YEAR) %>%
  # Calculate the share of married people
  summarise(
    share_married = weighted.mean(married, w = PERWT, na.rm = TRUE),
    .groups = "drop"
  ) %>%
  # Join with the original dataset to retain all data while carrying forward the calculated share_married
  left_join(donorpool, by = c("Place.Name", "YEAR")) %>%
  # Now filter to process only unmarried data
  filter(married == 0) %>%
  # Perform the rest of the aggregations
  group_by(Place.Name, YEAR) %>%
  summarise(
    white = weighted.mean(white, w = PERWT, na.rm = TRUE),
    black = weighted.mean(black, w = PERWT, na.rm = TRUE),
    share_hsdropout = weighted.mean(hsdropout, w = PERWT, na.rm = TRUE),
    share_hsgraduate = weighted.mean(hsgraduate, w = PERWT, na.rm = TRUE),
    share_somecollege = weighted.mean(somecollege, w = PERWT, na.rm = TRUE),
    share_min_bachelor = weighted.mean(min_bachelor, w = PERWT, na.rm = TRUE),
    age = weighted.mean(AGE_MOM, w = PERWT, na.rm = TRUE),
    part_rate = weighted.mean(laborforce, w = PERWT, na.rm = TRUE),
    emp_rate = weighted.mean(employment, w = PERWT, na.rm = TRUE),
    hours = weighted.mean(UHRSWORK_MOM[EMPSTAT_MOM == 1], w = PERWT[EMPSTAT_MOM == 1], na.rm = TRUE),
    fulltime = weighted.mean(fulltime, w = PERWT, na.rm = TRUE),
    income = weighted.mean(INCWAGE_MOM[INCWAGE_MOM > 0], w = PERWT[INCWAGE_MOM > 0], na.rm = TRUE),
    no_children = weighted.mean(no.children, w = PERWT, na.rm = TRUE),
    .groups = "drop"
  )

synthcontrol_donorpool <- synthcontrol_donorpool[complete.cases(synthcontrol_donorpool), ]


#Include lags
#2012
part_rate_2012 <- synthcontrol_donorpool %>%
  filter(YEAR == 2012) %>%
  dplyr::select(Place.Name, part_rate_2012 = part_rate)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(part_rate_2012, by = "Place.Name")

hours_2012 <- synthcontrol_donorpool %>%
  filter(YEAR == 2012) %>%
  dplyr::select(Place.Name, hours_2012 = hours)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(hours_2012, by = "Place.Name")

income_2012 <- synthcontrol_donorpool %>%
  filter(YEAR == 2012) %>%
  dplyr::select(Place.Name, income_2012 = income)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(income_2012, by = "Place.Name")


#2010
part_rate_2010 <- synthcontrol_donorpool %>%
  filter(YEAR == 2010) %>%
  dplyr::select(Place.Name, part_rate_2010 = part_rate)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(part_rate_2010, by = "Place.Name")

hours_2010 <- synthcontrol_donorpool %>%
  filter(YEAR == 2010) %>%
  dplyr::select(Place.Name, hours_2010 = hours)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(hours_2010, by = "Place.Name")

income_2010 <- synthcontrol_donorpool %>%
  filter(YEAR == 2010) %>%
  dplyr::select(Place.Name, income_2010 = income)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(income_2010, by = "Place.Name")


#2007 values and creating a new dataframe to merge back
part_rate_2007 <- synthcontrol_donorpool %>%
  filter(YEAR == 2007) %>%
  dplyr::select(Place.Name, part_rate_2007 = part_rate)  # Renaming the column for clarity

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(part_rate_2007, by = "Place.Name")

hours_2007 <- synthcontrol_donorpool %>%
  filter(YEAR == 2007) %>%
  dplyr::select(Place.Name, hours_2007 = hours)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(hours_2007, by = "Place.Name")

income_2007 <- synthcontrol_donorpool %>%
  filter(YEAR == 2007) %>%
  dplyr::select(Place.Name, income_2007 = income)

synthcontrol_donorpool <- synthcontrol_donorpool %>%
  left_join(income_2007, by = "Place.Name")



# Now, convert this factor to integers
synthcontrol_donorpool$city <- factor(synthcontrol_donorpool$Place.Name)
synthcontrol_donorpool$city <- as.numeric(synthcontrol_donorpool$city)

#Change format of data frame (necessary for command dataprep)
synthcontrol_donorpool <- as.data.frame(synthcontrol_donorpool)

# Correct way to specify controls
controls_identifier <- setdiff(unique(synthcontrol_donorpool$city), 13)

#New York City is no. 13
#Labor Force Participation
dataprep.out <-
  dataprep(
    foo = synthcontrol_donorpool,
    predictors = c("age","white","marreied","black","share_hsdropout","share_hsgraduate","share_somecollege","share_min_bachelor","no_children","part_rate_2007","part_rate_2010","part_rate_2012"), #"part_rate_2007","part_rate_2010","part_rate_2012"#add "hispanic"
    predictors.op = "mean",
    dependent = "part_rate",
    unit.variable = "city",
    time.variable = "YEAR",
    treatment.identifier = 13,
    controls.identifier = controls_identifier,
    time.predictors.prior = 2006:2013,
    time.optimize.ssr = 2006:2013,
    unit.names.variable = "Place.Name",  
    time.plot = 2006:2019
  )

synth.out <- synth(dataprep.out)
synth.tables <- synth.tab(dataprep.res = dataprep.out,
                          synth.res    = synth.out
)

gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
gaps[1:14, 1]
gaps

synth.tables$tab.w
synth.tables$tab.v
synth.tables$tab.pred


path.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Labor Force Participation",
          Xlab = "Year",
          Legend = c("NYC", "Synthetic NYC"),
          Main = "Mothers of 4y.o. (NYC vs Synthetic NYC)")

gaps.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Effect",
          Xlab = "Year",
          Main = " Gap between labor force participation in NYC and its synthetic version")


#Hours
dataprep.out <-
  dataprep(
    foo = synthcontrol_donorpool,
    predictors = c("age","married","white","black","share_hsdropout","share_hsgraduate","share_somecollege","share_min_bachelor","no_children","hours_2007","hours_2010","hours_2012"), #
    predictors.op = "mean",
    dependent = "hours",
    unit.variable = "city",
    time.variable = "YEAR",
    treatment.identifier = 13,
    controls.identifier = controls_identifier,
    time.predictors.prior = 2006:2013,
    time.optimize.ssr = 2006:2013,
    unit.names.variable = "Place.Name",  
    time.plot = 2006:2019
  )

synth.out <- synth(dataprep.out)
synth.tables <- synth.tab(dataprep.res = dataprep.out,
                          synth.res    = synth.out
)

gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
gaps[1:14, 1]
gaps

synth.tables$tab.w
synth.tables$tab.v
synth.tables$tab.pred


path.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Hours",
          Xlab = "Year",
          Legend = c("NYC", "Synthetic NYC"),
          Main = "Hours Mothers of 4y.o. (NYC vs Synthetic NYC)")

gaps.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Effect",
          Xlab = "Year",
          Main = " Gap between Hours in NYC and its synthetic version")


#Income
dataprep.out <-
  dataprep(
    foo = synthcontrol_donorpool,
    predictors = c("age","married","white","black","share_hsdropout","share_hsgraduate","share_somecollege","share_min_bachelor","no_children"), #add "hispanic"
    predictors.op = "mean",
    dependent = "income",
    unit.variable = "city",
    time.variable = "YEAR",
    treatment.identifier = 13,
    controls.identifier = controls_identifier,
    time.predictors.prior = 2006:2013,
    time.optimize.ssr = 2006:2013,
    unit.names.variable = "Place.Name",  
    time.plot = 2006:2019
  )

synth.out <- synth(dataprep.out)
synth.tables <- synth.tab(dataprep.res = dataprep.out,
                          synth.res    = synth.out
)

gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
gaps[1:14, 1]
gaps

synth.tables$tab.w
synth.tables$tab.v
synth.tables$tab.pred


path.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Labor Force Participation",
          Xlab = "Year",
          Legend = c("NYC", "Synthetic NYC"),
          Main = "Income Mothers of 4y.o. (NYC vs Synthetic NYC)")

gaps.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Effect",
          Xlab = "Year",
          Main = " Gap between Income in NYC and its synthetic version")

#Fulltimework
dataprep.out <-
  dataprep(
    foo = synthcontrol_donorpool,
    predictors = c("age","married","white","black","share_hsdropout","share_hsgraduate","share_somecollege","share_min_bachelor","no_children"), #add "hispanic"
    predictors.op = "mean",
    dependent = "fulltime",
    unit.variable = "city",
    time.variable = "YEAR",
    treatment.identifier = 13,
    controls.identifier = controls_identifier,
    time.predictors.prior = 2006:2013,
    time.optimize.ssr = 2006:2013,
    unit.names.variable = "Place.Name",  
    time.plot = 2006:2019
  )

synth.out <- synth(dataprep.out)
synth.tables <- synth.tab(dataprep.res = dataprep.out,
                          synth.res    = synth.out
)

gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
gaps[1:14, 1]
gaps

synth.tables$tab.w
synth.tables$tab.v
synth.tables$tab.pred


path.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Labor Force Participation",
          Xlab = "Year",
          Legend = c("NYC", "Synthetic NYC"),
          Main = "Fulltime Share Mothers of 4y.o. (NYC vs Synthetic NYC)")

gaps.plot(synth.res = synth.out,
          dataprep.res = dataprep.out,
          tr.intake = 1990,
          Ylab = "Effect",
          Xlab = "Year",
          Main = " Gap between Fulltime Share in NYC and its synthetic version")

